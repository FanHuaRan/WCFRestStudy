<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  </configSections>
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />
    <!--使用ASP.NET缓存-->
    <caching>
      <!--输出缓存-->
      <outputCacheSettings>
        <!--配置容器-->
        <outputCacheProfiles>
          <!--name为缓存容器名称 duration为过期时间 varyByParam是指定缓存存储方式,none表示不使用查询变量进行存储，直接以url(不区分查询字符串进行存储)-->
          <add name="default" duration="60" varyByParam="none" />
          <add name="albumCache" duration="60" varyByParam="none" />
          <add name="artistCache" duration="60" varyByParam="none" />
          <add name="genreCache" duration="60" varyByParam="none" />
          <add name="orderDetailCache" duration="60" varyByParam="none" />
          <add name="orderCache" duration="60" varyByParam="none" />
        </outputCacheProfiles>
      </outputCacheSettings>
    </caching>
  </system.web>
  <system.serviceModel>
    <services>
      <!--配置我们的服务 每个服务都配置好ABC-->
      <!--IIS托管要配置相关行为-->
      <!--不带输出缓存的服务-->
      <service name="MusicStoreWcfRestService.EmployeesService" behaviorConfiguration="serviceBehavior">
        <endpoint address="" binding="webHttpBinding" contract="MusicStoreWcfRestContract.IEmployeesService" behaviorConfiguration="web" />
      </service>
      <service name="MusicStoreWcfRestService.WCFAlbumService" behaviorConfiguration="serviceBehavior">
        <endpoint address="" binding="webHttpBinding" contract="MusicStoreWcfRestContract.IWCFAlbumService" behaviorConfiguration="web" />
      </service>
      <service name="MusicStoreWcfRestService.WCFArtistService" behaviorConfiguration="serviceBehavior">
        <endpoint address="" binding="webHttpBinding" contract="MusicStoreWcfRestContract.IWCFArtistService" behaviorConfiguration="web" />
      </service>
      <service name="MusicStoreWcfRestService.WCFGenreService" behaviorConfiguration="serviceBehavior">
        <endpoint address="" binding="webHttpBinding" contract="MusicStoreWcfRestContract.IWCFGenreService" behaviorConfiguration="web" />
      </service>
      <service name="MusicStoreWcfRestService.WCFOrderDetailService" behaviorConfiguration="serviceBehavior">
        <endpoint address="" binding="webHttpBinding" contract="MusicStoreWcfRestContract.IWCFOrderDetailService" behaviorConfiguration="web" />
      </service>
      <service name="MusicStoreWcfRestService.WCFOrderService" behaviorConfiguration="serviceBehavior">
        <endpoint address="" binding="webHttpBinding" contract="MusicStoreWcfRestContract.IWCFOrderService" behaviorConfiguration="web" />
      </service>
      <!--带输出缓存的服务-->
       <service name="MusicStoreWcfRestService.EnableCache.EmployeesService" behaviorConfiguration="serviceBehavior">
        <endpoint address="" binding="webHttpBinding" contract="MusicStoreWcfRestContract.EnableCacheServiceContract.IEmployeesService" behaviorConfiguration="web" />
      </service>
      <service name="MusicStoreWcfRestService.EnableCache.WCFAlbumService" behaviorConfiguration="serviceBehavior">
        <endpoint address="" binding="webHttpBinding" contract="MusicStoreWcfRestContract.EnableCacheServiceContract.IWCFAlbumService" behaviorConfiguration="web" />
      </service>
      <service name="MusicStoreWcfRestService.EnableCache.WCFArtistService" behaviorConfiguration="serviceBehavior">
        <endpoint address="" binding="webHttpBinding" contract="MusicStoreWcfRestContract.EnableCacheServiceContract.IWCFArtistService" behaviorConfiguration="web" />
      </service>
      <service name="MusicStoreWcfRestService.EnableCache.WCFGenreService" behaviorConfiguration="serviceBehavior">
        <endpoint address="" binding="webHttpBinding" contract="MusicStoreWcfRestContract.EnableCacheServiceContract.IWCFGenreService" behaviorConfiguration="web" />
      </service>
      <service name="MusicStoreWcfRestService.EnableCache.WCFOrderDetailService" behaviorConfiguration="serviceBehavior">
        <endpoint address="" binding="webHttpBinding" contract="MusicStoreWcfRestContract.EnableCacheServiceContract.IWCFOrderDetailService" behaviorConfiguration="web" />
      </service>
      <service name="MusicStoreWcfRestService.EnableCache.WCFOrderService" behaviorConfiguration="serviceBehavior">
        <endpoint address="" binding="webHttpBinding" contract="MusicStoreWcfRestContract.EnableCacheServiceContract.IWCFOrderService" behaviorConfiguration="web" />
      </service>
    </services>
    <!--配置行为-->
    <behaviors>
      <!--服务行为-->
      <serviceBehaviors>
        <behavior name="serviceBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
        <behavior>
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
      <!--终结点行为-->
      <endpointBehaviors>
        <behavior name="web">
          <!-- helpEnabled设置为true可以自动配置帮助页面，地址是.svc?/Help -->
          <!-- automaticFormatSelectionEnabled设置为true可以开启自动消息格式选择 -->
          <!-- 参加：http://www.cnblogs.com/artech/archive/2012/02/07/wcf-rest-help-page.html-->
          <webHttp helpEnabled="true" automaticFormatSelectionEnabled="true" />
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <!--协议映射-->
    <protocolMapping>
      <add binding="basicHttpsBinding" scheme="https" />
    </protocolMapping>
    <!--配置服务宿主的环境与asp.net兼容-->
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true" />
    <!--
        若要在调试过程中浏览 Web 应用程序根目录，请将下面的值设置为 True。
        在部署之前将该值设置为 False 可避免泄露 Web 应用程序文件夹信息。
      -->
    <directoryBrowse enabled="true" />
  </system.webServer>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <connectionStrings>
    <add name="musicdb" connectionString="Data Source=.; Initial Catalog = musicstore; User Id = sa;Password = 123" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <log4net>

    <appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">

      <!--日志路径-->

      <param name="File" value="D:\WCFMusicStore\App_Log\" />

      <!--是否是向文件中追加日志-->

      <param name="AppendToFile" value="true" />

      <!--log保留天数-->

      <param name="MaxSizeRollBackups" value="10" />

      <!--日志文件名是否是固定不变的-->

      <param name="StaticLogFileName" value="false" />

      <!--日志文件名格式为:2008-08-31.log-->

      <param name="DatePattern" value="yyyy-MM-dd&quot;.log&quot;" />

      <!--日志根据日期滚动-->

      <param name="RollingStyle" value="Date" />

      <layout type="log4net.Layout.PatternLayout">

        <param name="ConversionPattern" value="%d [%t] %-5p %c - %m%n %loggername" />

      </layout>

    </appender>

    <!-- 控制台前台显示日志 -->

    <appender name="ColoredConsoleAppender" type="log4net.Appender.ColoredConsoleAppender">

      <mapping>

        <level value="ERROR" />

        <foreColor value="Red, HighIntensity" />

      </mapping>

      <mapping>

        <level value="Info" />

        <foreColor value="Green" />

      </mapping>

      <layout type="log4net.Layout.PatternLayout">

        <conversionPattern value="%n%date{HH:mm:ss,fff} [%-5level] %m" />

      </layout>

      <filter type="log4net.Filter.LevelRangeFilter">

        <param name="LevelMin" value="Info" />

        <param name="LevelMax" value="Fatal" />

      </filter>

    </appender>

    <root>

      <!--(高) OFF > FATAL > ERROR > WARN > INFO > DEBUG > ALL (低) -->

      <level value="all" />

      <appender-ref ref="ColoredConsoleAppender" />

      <appender-ref ref="RollingLogFileAppender" />

    </root>

  </log4net>
</configuration>